{"version":3,"sources":["components/Welcome.js","components/Header.js","components/Counter.js","components/Weather.js","components/Persons.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","props","this","username","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","Typography","variant","Counter","state","count","increment","setState","decrement","Button","color","onClick","api","Weather","useState","query","setQuery","weather","setWeather","TextField","id","label","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","placeholder","main","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","temp","Persons","items","isLoaded","map","item","Card","CardContent","email","website","phone","address","city","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","component","event","preventDefault","backgroundColor","palette","background","paper","Homepage","React","setValue","Tabs","newValue","aria-label","href","App","userLogin","btnLogin","getUserLogin","changeInputText","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b4abc2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nclass Welcome extends Component{\r\n\r\n    render(props){\r\n        return(\r\n        <div><p>Welcome {this.props.username}</p>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Welcome","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n         \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            My First App\r\n          </Typography>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  increment = () => {\r\n    this.setState({\r\n      count: this.state.count + 1,\r\n    });\r\n  };\r\n\r\n  decrement = () => {\r\n    if (this.state.count > 0) {\r\n      this.setState({\r\n        count: this.state.count - 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.decrement}>\r\n          -\r\n        </Button>\r\n\r\n        {this.state.count}\r\n\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={this.increment}>\r\n          +\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core/\";\r\nconst api = {\r\n  key: \"36a6f38dc451c31e940db3e84906199e\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction Weather() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <TextField\r\n        id=\"outlined-multiline-flexible\"\r\n        label=\"Multiline\"\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        value={query}\r\n        onKeyPress={search}\r\n        variant=\"outlined\"\r\n        placeholder=\"Enter city\"\r\n      />\r\n\r\n      {typeof weather.main != \"undefined\" ? (\r\n        <div>\r\n          <div className=\"location\">\r\n            {weather.name}, {weather.sys.country}\r\n          </div>\r\n          <div className=\"date\">{dateBuilder(new Date())}</div>\r\n          {Math.round(weather.main.temp)}Â°c\r\n          <div className=\"weather\">{weather.weather[0].main}</div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nclass Persons extends Component {\r\nstate = {\r\n    items: [],\r\n    isLoaded: false\r\n\r\n}\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n        this.setState({\r\n            isLoaded: true,\r\n            items: json\r\n        }\r\n        )\r\n    }\r\n    )\r\n}\r\n\r\n\r\n    render() {\r\nlet {isLoaded, items} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {isLoaded ? \r\n                <div>\r\n                    <p>Loading data from api:</p>\r\n\r\n                    \r\n\r\n\r\n                    \r\n                        {items.map(item => (\r\n                            <Card className=\"spacing\">\r\n                            <CardContent id={item.id}>\r\n                            <h5>{item.name}</h5>\r\n                            <p><b>Username:</b> {item.username}</p>\r\n                            <p><b>Email:</b> {item.email}</p>\r\n                            <p><b>Website:</b> {item.website}</p>\r\n                            <p><b>Phone:</b> {item.phone}</p>\r\n                        <p><b>City:</b> {item.address.city}</p>\r\n                            </CardContent>\r\n                            </Card>\r\n                        ))}\r\n                       \r\n                   \r\n\r\n\r\n\r\n\r\n                   \r\n                    </div>\r\n                \r\n                : <div>Data still Loading...</div>} \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Persons;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Counter from \"./Counter\";\r\nimport Weather from \"./Weather\";\r\nimport Persons from \"./Persons\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function Homepage() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <LinkTab label=\"Counter\" href=\"/drafts\" {...a11yProps(0)} />\r\n          <LinkTab label=\"Weather\" href=\"/trash\" {...a11yProps(1)} />\r\n          <LinkTab label=\"Load from API\" href=\"/spam\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Counter></Counter>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Weather></Weather>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Persons></Persons>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Welcome from \"./components/Welcome\";\nimport Header from \"./components/Header\";\nimport { Container, Button, TextField } from \"@material-ui/core/\";\n\nimport Homepage from \"./components/Homepage\";\nclass App extends Component {\n  state = {\n    userLogin: false, //user isnt login when page load\n    username: null,\n  };\n\n  btnLogin = () => {\n    const getUserLogin = this.state.userLogin;\n    this.setState({\n      userLogin: !getUserLogin,\n    });\n  };\n\n  changeInputText = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header></Header>\n        <Container maxWidth=\"lg\">\n          {this.state.userLogin ? (\n            <div>\n              <Welcome username={this.state.username}> </Welcome>\n\n              <Homepage></Homepage>\n\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.btnLogin}\n              >\n                Logout\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Enter Username\"\n                onChange={this.changeInputText}\n              />\n\n              <br />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.btnLogin}\n              >\n                Login\n              </Button>\n\n              <br />\n              <p>Please login to continue</p>\n            </div>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}